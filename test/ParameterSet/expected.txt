> ParameterSetTest
>>> #testFields
{ id: 10, point: [3,500,10], params: { "p1": 3, "p2": 5.0, "p3": 50.0 } }
>>> #testToJSON
{ "id": 10, "point": [3,500,10], "params": { "p1": 3, "p2": 5.0, "p3": 50.0 } }
>>> #testLoadJSON
{ id: 1234, point: [2,120,10], params: { "p1": 2, "p2": 1.2, "p3": 12.0 } }
>>> #testRuns
numRuns should be 3 : 3
there are three runs: 
  [{ id: 0, parentPSId: 0, seed: 0, result: [0.0], placeId: 0, startAt: -1, finishAt: -1 },{ id: 1, parentPSId: 0, seed: 1, result: [0.0], placeId: 0, startAt: -1, finishAt: -1 },{ id: 2, parentPSId: 0, seed: 2, result: [0.0], placeId: 0, startAt: -1, finishAt: -1 }]
numRuns should be 5 : 5
numRuns should be 5 : 5
empty_runs should be empty ArrayList : []
>>> #testIsFinished
isFinished is false initially: false
isFinished is false if there remains unfinished run: false
isFinished is true when all runs are finished: true
>>> #testAveragedResult
averagedResult should be 1.5: 1.5
>>> #testIsSimilarToWithRespectTo
is true when axis0 and 1 are same: true
is false when either axis0 or 2 is different : false
is false when coordinates are different on more than two axes : false
>>> #testCountWhere
count All should be 3: 3
count where point(0)=3 should be 1 : 1
count where point(0)>3 and point(2)>=10 shoud be 2 : 2
>>> #testFind
found PS should have point[4,500,10]: [4,500,10]
     and should have id 1 : 1
when matched PS is not found, it should return null : null
when identical PS exists, findOrCreateParameterSet does not create a new PS
  ps4.id should be 2: 2
  ParameterSet.count should be 3: 3
findOrCreateParameterSet creates PS with sequential ids like 0,1,2 : 0,1,2
